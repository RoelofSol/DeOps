
status
	trust loop
		who trusts who

	buddy group
		remove group

	buddy other
		add buddy
		add group

	link tree other
		network status
			stat
		should make icon so main/im form can share it

	user
		selected user name (edit name)
			alternate names from trust/buddy
		Title
		Projects
		
		IM / Mail
		
		trust
			link/unlink
			
		buddy
			link location
			add as buddy
			remove from buddies
			
		locations
			names (edit)
			local time if diff
			
		projects

 person net open/nat/blocked, not finding local untrusted
chat default in text mode, put formatting options in right click menu.. enable formatting, remove tools from toolbar
remove buddy only active in buddy view, use separator
also status if killed

user 2 user transfer

add buddy button
right click remove buddy

give buddy menu items
click on buddy displays info

report name discrepencies in status info

test global

	associations? put in diff sturcture buddyinfo data type/file?

set global im web cache

login - instead of op, put profile
if globalIM profile not detected, show link in red on login: Create Global IM Profile
in link selection change project to 'group' and include buddies, main to primary
project coming before primary in nar bar drop down
instead of 'trust unconfirmed' after link, make color red, and then in extended info put reason in red

setting - save IM mode, buddies or structure view on close

// update IM/Chat/Gui in notify area, if state changed!!

make sure diff networks use diff webcaches in sim
	
Buddy list Component

	hows the interface going to work, plug into tree command?
	
	how are global buddies going to be save in op's buddy list?
	

	test 
		create network with just loc, transfer, IM (chat)

	service
		local synced only when trust is enabled

		global list saved with op list - if linked
		
		
local invisible option - publishes offline, and doesnt reply to pings
	put button above lock - when in lock down auto go into invisible, dotted person icon, or white outline
	maybe no invisible mode because important to be able to reach user especially to get
	updated service information.  maybe just flag, lockdown should signal away at least
	

Global IM
	Services: Location, IM, buddies
	Later: Transfer, Chat
	
	remove direct trust references from location?
	
	Buddies component
		Stores names / public keys on local drive
		list can be exported / imported for moving between profiles
		published only on op network
		can be associated with other keys on other networks
	
	Buddies in buddy list are local interested
		Confirmed if remote interested
		Tag - puts it somwhere in the buddy list
		
	Budddies live on global IM list so if Op falls, they are still reachable
	
	how to carry the most over
	
new invite
	for invite to work you need person's global public key or can select someone from global buddy list
	invite created, can either be IM'd directly to them, or link saved and emailed or IMd over another network
	
quick look at live comm
	login search for highest that is online
	create a persistant connection with them
	keep tabs on higher's higher as well
	**heart beats flow down periodically from top to bottom of live comm
	people always know the current live comm structure
	dont need to worry about highers getting flooded in loc component
	signed location notify is the 'heart beat'


having trouble with getting location offline message to user during logout in the sim

in status panel - show LED indicator if online / searching / offline









maybe put into input text toolbar a formatting off button that is on by default - msgs are encoded txt/rtf/html(for future)


make title something assigned

design re-alignment

store caching 
	keep track of when last result was sent
		if greater than a minute, cache entry is up for pruning
	
	if greater than x requests in time period, signal in search result to republish
		if search result tagged with republish, republish result at closest node that didnt have data

	used when high load
	how to keep cache entries up to date?
	cache entries only last for like 5 mins
	requester do the caching, or should requested auto-cache if load too high
		auto-caching might not hit the nodes that requesting nodes would be likely to hit
	index file hashes on network for files over 10 meg, otherwise file can be multisourced from default replicators of file
	always get content once found from node closest to SELF, pull content away from source, ensure it doesn't get flooded
		node publishes data (he is focal point), diseminates to adjacent peers (focal point splits in two, etc..)
	How to prevent publishing overload? ex. 100 members in op all publishing global loc data at same 8 nodes closest to OpID
		need publish search type with acks that return current storage volume, publish closest not full
			
	testing
		compare node load in 64 network with on off
		create auto link routine where nodes make random linkup to someone, gen a root
		create auto post / mail / files / chat use for screen shots
		compare bandwidth at levels
		bandwidth for root node with everyone updating its loc every 2 secs

live
	build test algorithms
	acts as continously active real-time conduit between all members in trusted system (might want to pipe system msgs through this)
	live based on rudp links, if no rudp link, live connect to next canidate, even if loc for someone exists
	rapidly alert up/down links when going offilne so that live structure can be patched quickly wihout nodes thinking location file is still active
	downlink determined by closest sub, if equal, highest rank where 2 nodes split tracks
	uplink determined by highest offline where not challenged
	show trusted/untrusted in live
	ensure when random subset of nodes removed all links/chat rooms still connected through live
	regular heart beats from the top? each link signs (itself and online subs) on way down tree
		everyone in org now knows who's online
		
	instead of lowers continually pinging higher nodes
	every minute highers broadcase location notify to subs
		notifies should be signed in this instance
		receive notify from higher, broadcast to lower
	this also acts as the heart beat of the continually active live comm structure
	
		
bandwidth
	client
		burst protection
			no more than 1kb/s of non rudp packets
		

all help files online, no one needs offline help -yet- thats a $$ features
	

test
	set fw to open and send back pong that reflects that
	op fw changed t
	nextTryIP the best way 2 solve the problem?
	catch thrown expceptions
	
	in sim show web cache requests / publishes, ensure not too often
	web cache pruning - create a / b / c /d /e / f caches
	
	automated tests - 2open, 1open1nat,  2op1open1nat, 2op2open... , run each until connected
	
	
other
	publisher unknown
	re-publish of local sync is off the hook!

	if file deleted on file sys, should auto go back to locked state
		what if user deletes to recycle bin, warn?

	intead of (accept trust) after name, grey name, and when clicked make header below yellow instead of purple
	
	sim AI
		right click sim 
			Service
				Run test -> select service box	
				Cleanup menu -> select service box
					foreach service selected / run asyncronously
			
	
			chat on / chat off
			Linkup
			Mail -> rand send / reply
			Post -> rand post / reply
			Plan -> 
			
		Clean menu -> cleans cached object
		chat - put chat text in active room, qa - received by members?
		trust - trust / change trust, qa - ensure accepted
		mail - send mail, qa - was received
		board - make post / reply to posts, qa - post reached all in region
		storage - create / add random files / folders with scopes
		profile - randomly change, qa ensure network up to date
		location - change loc name, etc.. qa - network up to date
		schedules, goals, storage, trust, mail can be checked to see if remotes have lastest versions
		
	change goals so goals have id and deligation follows org lines
		that way someone changes positions, switches super / sup, goals remain basically the same
		goal deligation is like a request, once accepted the task remains no matter what happens to above?

	sql error reports
	move global cache to cache.riseop.com so it can be turned off by dns or redirected

	on linkup, trigger inherit from top node
	doesnt seem like trust icon/splash changes are propagated to subs quickly should auto post

	network status info panel title header should be the color of the status of the firewall

	test crawlable over home lan
		crawl requests must be signed?
			
	sending large block of text crashes, test other places where string input is unchecked size
	
	locations not expiring, there are a million of em
	looooooooootta dupes in ipcache

	list box header color is awful

	repeat load failure and ensure that core isnt left hanging

	chat not selecting default input box
	dont show update when in room
	if no default chat view, show riseOp help page, if can't connect, show profile
	if no chat panels - put up profile for now, later help
		on first chat message, put news update if chat not visible
			
	keep list of keys contacted over broadcast - on rudp connect to key send LAN address
		also for rudp over global proxy, send our local IP specified in global network

	one more stab at security in settings, tray, link changes

	test message board - doesnt seem like refresh is thread safe


default views
	mail - help
	board - help
	storage - help
	chat - help (introduction to 'trust')
	profile - (right click to edit)
	
re-alignment
	leave old network once all subs confirmed to be re-aligned
	publish new tagged trust on re-align confirming current network
	if we get an updated trust from parent with new op key, re-align to that
	automatically cascades down in the background
	on re-align warn if any current subs have not be re-aligned to current yet
	only allow re-alignment if user is root 
	on receieve re-align request, confirm parents parent's up to root have been realigned
	public keys, names, files all stay the same
	anything new created is with new file keys that anyone left out doesnt have access to
	
fall release
	licensing
	
	
	*** items from todo
	31 crits
	
	store caching
	network bandwidth limits/audit - tracking in sim triggers node to start logging bw data
	do larger sim (128) - test create/find public ops
	
	global buddy list
		invites over global
		right click invite to current op (works for secret)
		invite encrypted with remote's public key
		need to make invite over global network only so no risk of public/secret links compramised
	realignment - detailed in future file
	live locations/chat
	kill switch

	web caching files?
	implement upnp?
	
	
3 trust chain
	adding files to storage causes re-download of unrelated file
	change middle teir file, high level integrates with original verion, but not inherited by subs
	working not saved between runs sometimes
	
global proxying
	have sim print warning in status if global proxy nodes exist in routing table, to ensure they're weeded out
	any way to replace published location with a new version?
	replicating - after knowing all global data types
	ensure 2 global proxied NATs udp hole punch rudp

	rainy day bug 
		2 client network, A client blocked, the B client has open global port, blocked op port
		blocked B op being added to A as open causing tunnel to break, links not synced, packet chaos

next
	use packetstream instead of protocl.writetofile	
	put stream closing calls in finally block
	do check tags on node click, or local sync search...
	
	if firewalled/NAT - display in big letters forward TCP/UDP ports xxxx
	
	bandwidth limits / auditing
		when bandwidth chart, figure out why bandwidth quadrupiles with 30% NATs
		really need priority search, some of these startup searches should be done during idle time
		use a packet outbound queue, similar to incoming one used in core thread
			outbound packets throttled there over multiple networks
			implement when bandwidth management is done
		
test
	debug places where searches etc.. are happening, when client knows its not connected
	prevent searches from piling up in disconnected state
	
	combine responsive / established - might want to do with proxying to ensure stuff is published over proxy
	change established to CanRepublish? map out process
	
	ensure search for lastest version of service doesnt get hung up on old versions and return prematurely
	a superior 5 levels up, on other side of network, updating plan should reflect on lower on next location update
	links timing out when traversing strucuture
	link.getlocs / getlocsbelow / use live links?
	link/plan research timer
	**thread per core in sim

other
	news message when connected / disconnected from op
	if news area too small for update, scroll across
	test32 nodes 3 lvls down disposing trust of adjacent link node
	location signoff tag
	assert in deconstructors that events are set back to null
	GetActiveSessions not threaded for gui, try not to thread dictionary
		
	use last seen date in localSync - show day, not time
	alert user of desyncs detected in localSync, maybe as news alert,
		if local versions are newer than those specified in localSync

	chat
		private triggering 2 invites, members dont see each other
		if node starts up untrusted, display help service by default instead of chat
		auto-open local chatroom when link made

	publishing / pruing / re-publishing / replicating uplink requests
	posts, outbound mail re-published on startup?
	use common assist for posts/mail/uplinkReqs?
	crawler - bandwidth, location storage load

	nav bar work with loops?
	test clients with different local times, init random gmt offsets
	GetDownlinkIDs not thread safe


Interface
	General
		Sorting of listviews
		status panel needs to update as network connects network_statusupdate, trigger news as well
		test gmt visible in status panel
		unload tray icon on exit?
		alphabetizize component menus, project button, nav bar, project nav drop down
		dont allow nav bar person switch on mail/chat components
		trust info box - options like trust, IM, mail, leave/join project
		exception catching/reporting - move to POST, get last 50 log entries as well by time
		multiline text in tree list row exceeds clip bounds
		
	graphics
		storage - restore
		plans   - edit
		goals	- edit
		tray	- restore, exit
	
	connecting entertainment
		visual aid so people can watch the connection process, entertaining, embed in main panel?
		show ring with global in middle and ring with op name in middle
		show routing table nodes, and packets being sent
		route nodes dark green, search nodes blue, show self red/orage/green, rudp sockets purple
		visual, cool looking, shows user direct lack of centralization, most of functionality already implemented
		
	Internal 
		expand a little more (names associated with sessions/transfers/searches/publish)
		browsing using nav bar needs to trigger searches 
		create function to search through externals for type/id/project, when popping external look for existing window?

	Link
		Online - Show as currently online nodes structured into makeshift hierarchy
			chat/voice uses this hierarchy for high/low - done so that realtime communication is not fragmented when people go offline
		
	News
		crazy refreshes when news not visible and button clicked
		show connected / disconnected
		chat msg (if chat not visible or visited in last minute, or alerted in last minute)
			<project> Chat activityk, Betty: hey group....
		new people online 
		
		more refined, if care about user, do detailed diff between new and old file
			show self only if local didn't make the change, if non-local self change show as white
			detect diff between changed schedule / changed goals or both

	input interface
		move to html from rtf? smaller data format, everything plaintext by default, augmented by html where desired
		customizable style sheet for IM that user can edit
		embed pictures/videos, etc.. in email / posts / chat / IMs
		ability to right-click switch from normal to html view

Components
	General
		Refactor Components with delegates or something, refactor while building visual component
			invokeInterface control->gui, gui->interface control functions handle locking of objects (NO locking from gui code)
		break control into interface comm / control comm so that multiple guis (mobile/mono/wpf) can be implemented easily
		Many actions in gui isnt piped down into control to fire events back to the interface to signal updates for multiple interface instances
		component plug-ins / view plugins for private components
		Remove references to LinkMap, use GetLink
		when component handles exit, assert that all events are emptied of references to debug gui's not releasing event handles
		Use LAN find code from gnuc to find peers on LAN, add to global then query for op
		
		Setting up and editing operation can also change the type/strength of the encryption used
		People can choose the strength/type of the encryption on their profile
		only load secret key on demand somehow, once used replace with zero's so not sitting static in memory
		
	Trust
		Higher determines lower's title/Name upon trust?
		Show that name/title so that can't be forged by someone changing their name and re-linking
		
		components
			links   - getlocs .. check cache functions
			chat    - high level chat is others in loop,
		New function to 'find in link map' so that mail,board,chat can provide the user with an option to 'find' a user
		Key termination command if private key compromised - auto-deletes all data associated with id

	Location 
		global replication
		make persistant so status panel can display last seen, also loaded can go straight to the cache
		permanent locations, no ttl except for global
		might be problem with different client ids
		can probably get rid of thread locks on location map
		send direct connects location updates immediately so they get things like away messages
		
		
		location info should probably contain latest versions for all components so 
			for example two of the same account would sync their storage without having to specifically having to open storage
			dynamic works for all components in list
	
	IM 
		Saved/Loaded my main IM interface
		Internal interface
		Log Interface - in chat log
		Crash on close IM, fin being called? unhooking from IMcontrol events? 
		sending file / picture - other side sees link click to accept, starts d/l with progress real time update to window
			result showed inline pic, or link to open file, file put in personal storage?
	Chat 
		show unfocused label as red on new messages
		only send full status on connect, otherwise send mini status updates for join/leaves
		figure out why invites don't work a lot, ensure that on connect invites are sent
		host going offline and coming back causes room members to not be synchronized
		double click member - IM, right click  - views, single click - send status, who
		room option - show locations, also for IM, make location font smaller
		check size of signed invite field
		link name change should change name in chat logs as well for chat/IM/window title
		implement live rooms / network
		set default cursor in input box
		test that our own link changes are reflected in link changes
		if room custom and no members, kill
		untrusted rooms discussed in chat.txt
		
		in future nodes marked as server can have rooms registered there so only one node to query for full room list
		log does chat/im - setup like yahoo chat log
		on join chat, node asks other nodes for previous singed messages before specified time
		
	Mail 
		soon - sync local mail between users
		tagging messages, filter by tags
		double clicking on name loacates them in link tree in panel
		use labels for organization - for example a project label could be tagged on, so we could filter regarding project x
		delete mail not refreshing view
		test/do re-publishing mail
		*re-publish local outbound un-acked mail on network established

	Board 
		 board scope sub-levels down, auto search highers for posts that have source==target, and show if in scope
		 attaching files
		 detect if post success, if not (not connected) ensure re-post when network.established
		 posts with subs not marked with +
		 ***posts/replies not updating quickly or at all :(
			replies not propagating
		 
	Profile
		time out loading - better searching interface use smoke color and better font, more info searching/dling/etc..
		Search / Transfer process painfully slow in real time mode, analyze
		Rename to Sites? Allow internal interlinked sub-pages

	Plans
		old plans not being deleted? seems like extra files in dir, try loading solo and updating local plan file
		shutdown in the middle of the causing load corruption?			
		transfer branch path when goal <-> schedule
		***probably want a custom renderer for the progress bar, default xp has it green
		***schedule slider should respond to mouse scrolls
		
	Storage
		drag into secure storage gives user option to replace what is already there, either on disk or locked
		
		review file references system
		drag files folder over highlights target
		secure copy / paste can use same folder commands as drag/drop
			copy/paste will be used as psuedo-fork to create local copy of groups build to work on in a seperate dir
			ensure really fast, because no 'real' files being created, all dupes in file system

		$ save storage snapshots (past header file versions) - display at root node	
		$ signal on comparison page if all files are replicated on network (can go offline and files still exist)

Core
    old projects not cleared from components during savelocal, save / ditch / option?
    multisource downloading
    each component's minute action should have unique interrupt given by core class
     
	Rudp
		route data over session if desination the same	
		nat/block keep list of recent search ids/kadids so duplicate results arent sent out
		use rudp when available to transmit link / loc data

		investigate LAN max transfer speed / CPU usuage and see what limits current setup imposes
		send packets directly from udp to rudp without switching to core thread
		rudpSession receive packet activate core thread		
		rudp socket send/recv buffer should use packet list instead of static buffers
		rudp session send/ecrypt buffers should be dynamically created for larger sizes

	Search 
		give components priority?? link over location, etc..
		make sure search result locations get to file download
		make sure store locations get to file download direct search -> store response works through firewalls
		both have the ability to be proxied

		record source kaddi with value
		on download try source, id isnt in location list, search for it, need that ID key to connect

		by the time key gets checked for download, profile / link headers should have right key if source is the same, if not gotta search

		search/download priority high (view) normal (network) low (research)
		forward searches to proxies
		if blocked send acks tcp to be forwarded
		analyze contact info sent in acks
		ensure correct contact info gets to transfer control, if blocked/natted/open ensure all work
		make sure download isnt started without sources

		search results need to transfer location info over to downloader
		what does search result from firewalled host look like?
		search results seem to only go out udp
		
		location info should include array of latest versions of each component
			so local area can update for everyone on login to the network
			storage, plans, profile - need latest fetched data of local area
			location data needs to be stored when user is offline for this to work

	udp packet throttle especially for patches
		backlog for packets, for patches, etc.. not for rudp
		packet cache for more than 4k sent in second
		cache should go for 60 seconds make, 240k, bleed cache out, first in first out
		Alert if packet cache has any entries at all
		check in sim if node sending more than x packets per sec
		
	ensure small nets / starting nets can be proxied through global net
		tcp proxies for non-local ops should be bandwidth throttled
		connect status should specify proxied through global
		5 connections in same op but all blocked able to form active op network by proxying throgh global
		
	privacy from untrusted
		mail grey if from untrusted source
		no posts allowed from untrusted
		IM settings allow host to not allow messages from untrusted
		refuse replication of network pieces to blacklisted, inherit blacklist from higher
			dont not replicate to untrusted because then each id needs to be trust verified continually
		heartbeat from top down with unique key, wont talk to 'unknown' nodes in dht without it
		if user is ignored, chat invites are ignored as well
		storage quotas per id to prevent flooding
		public key kill switch	
			if encountered, all local files and profile deleted, app closed
	
	contact manager? plaxo sync for permanent replicating store that is always accessible
		probably better if built on top of database component ;)
		
Simulator
	track bandwidth / memory / allocated objects
	figure out why IO writes in FiresoftDemo so high, getting 2min/sec through, pretty damn good
	record max udp burst sizes, or do packet size distribution histogram

	***checksigned / idtokey throw exceptions, maybe just return false or something?	
			
quick
	test with null global, even have option for secret at this point?
	ensure callers know what to do when tcpcontrol.sendpacket is overloaded
	bandwidth chart
	use localfilekey for all file names so name diff per computer
	finish self search and then start bucket replication so startup doesnt spit out massive patches
	component dir also encoded with local key / trimmed to 8 chars
	cache files missing from component header - do in load header
			dont delete old path in Cache<component> function, until new header saved: move - save headers - delete old files
	run save headers every 10 secs - every sec is too often, and slows simmy
	

licensing
	deops looks for signed license file for proof
	passes license file to others on network as proof that local node is licensed
	license itself is signed data like name, address, phone, date, DOB, whatever, customer ID, type(com, gov, edu, org)
	if people using bad license they'll know it because their name isnt in it
	bad license can be copied, shared with warez whatever, the point is license accountability and proving bad licenses, creating incentive to get 'own' license	
	how to people protect their own licenses from being copied unwillfully?
		should contain passworded.. something to protect	
	
Release security
    throwing load exception in obfuscated code?
	Ensure unnessesary strings arent exposed
	Online tracking, embedd JMG internal key
	Obfuscate
	Sign
	detatch simulator
	Install app into GAC, strong name
	Pre-compile with ngen, http://msdn.microsoft.com/vcsharp/default.aspx?pull=/msdnmag/issues/06/05/CLRInsideOut/default.aspx