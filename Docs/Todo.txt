
manage button with icon (bow tie / glasses)
	Settings, Invite, Tools | Sign In, Sign Off
should be able to select project name in tree
right click project name gives manage menu options
use file cabinent for data icon
use folder for storage (rename to Files)
remove search lable, put search icon next to input box
new profile icon
side view
	white search button
	put manage menu in item list
when home button is active, manage button is not

new / join functionality
invite button functionality

how to open multiple intances and test in sim
	support multiple networks
	share global, open same instance

use sim with network
	open node interface
	select manage Sign In
	or create new user with invite to test
	select another user and load
	Sim Interface shows networks a user has loaded Global/fire/fire/xyz.. etc.. alerts are network-alert
	can test invites across multiple cores through the sim
		replace instance with computer and make instance a network/service shell

new splash image, new icon
put images all in right services directories

Invites
	interface 
		tools menu (settings, invite, signoff, signon, transfers)
		trust tool buttons to bottom corner panel that changes per selection
		
	single instance - balance resources across many dhts
		ensure clicking on file / link opens new sign-on window
		create shell class across services and network, OpInstance
		create processing thread per network
		use a packet outbound queue, similar to incoming one used in core thread
			outbound packets throttled there over multiple networks
		test functioning multiple nets in sim

	secret
		not connected to global network
		invite is passworded routing table IPs, opID, web caches
		password is auto-generated to prevent weakness
		riseop://secret/alpha-encoded
		
	private 
		invitation packet encypted and stored on global network at invite ID with timeout
		invite itself is invite ID/decyption key
		passworded as well
		riseop://private/alpha-encoded

	public
		riseop://networkname
		opID is hashed network name
		
	have default global network riseop://global as startup option
		
	16 byte salt beginning of op file is combined with password hash to decrypt op file
	let user know safest way to send invite / password is over riseOp IM public or phone
	

Dealing with LANs
	detect clients on LAN to connect to
		add LAN broadcast ping interval to boostrap
	implement upnp
	both above need real world testing		

	know diff between fw open on LAN and on internet
	should simulate local net screwing up firewall settings and its effect on connecting with the outside	
		10.0.0.0 - 10.255.255.255
		172.16.0.0 - 172.31.255.255
		192.168.0.0 - 192.168.255.255
	if firewalled/NAT 
		display in big letters forward TCP/UDP ports xxxx
		by default set TCP/UDP ports equal
	if can ping open sites ms/google/etc.. only change to fw open on connect from non-private IP

global proxying
	have sim print warning in status if global proxy nodes exist in routing table, to ensure they're weeded out
	any way to replace published location with a new version?
	replicating - after knowing all global data types (invites)
	ensure 2 global proxied NATs udp hole punch rudp

test network
	global proxy
		2 blocked hosts on op1, 1 open hsot on op2
		2 dupe blocked hosts on op1, proxying through same open global node on op2
		2 blocked hosts on op1, 2 open hosts on op2
		full network 5 op1 blocked, 5 op2 open, op1 functional?
		global proxy location entries expire once node connects to real network
		2 global proxied online then open comes online, ensure all nodes set useGlobalProxies to false
		2 blocked connected to 1 open on op, and open node disconnecting, blocked should global proxy

	automated test system
		automation script - load x hosts, type, timeouts, run, stop, pause, check status, etc..
		maybe a a list<testScenario> that is run through, results / warnings kept for each, can be run individually

next
	use packetstream instead of protocl.writetofile	
	put stream closing calls in finally block
	delete PacketsFile.cs from svn
	rename versionedcache in svn
	
	bandwidth limits / auditing
		when bandwidth chart, figure out why bandwidth quadrupiles with 30% NATs
	
		
test
	debug places where searches etc.. are happening, when client knows its not connected
	prevent searches from piling up in disconnected state
	
	combine responsive / established - might want to do with proxying to ensure stuff is published over proxy
	change established to CanRepublish? map out process
	
	ensure search for lastest version of service doesnt get hung up on old versions and return prematurely
	a superior 5 levels up, on other side of network, updating plan should reflect on lower on next location update
	links timing out when traversing strucuture
	link.getlocs / getlocsbelow / use live links?
	link/plan research timer

other
	news message when connected / disconnected from op
	test32 nodes 3 lvls down disposing trust of adjacent link node
	location signoff tag
	assert in deconstructors that events are set back to null
	GetActiveSessions not threaded for gui, try not to thread dictionary
	window title not updated on name change
		
	use last seen date in localSync - show day, not time
	alert user of desyncs detected in localSync, maybe as news alert,
		if local versions are newer than those specified in localSync
	
	turn packet/error logging back on after tests - ensure mem usage at mim - let user right click turn logging on/off
	
	chat
		private triggering 2 invites, members dont see each other
		if node starts up untrusted, display help service by default instead of chat
		auto-open local chatroom when link made

	publishing / pruing / re-publishing / replicating uplink requests
	posts, outbound mail re-published on startup?
	use common assist for posts/mail/uplinkReqs?
	crawler - bandwidth, location storage load

	nav bar work with loops?
	fix vertical scroll bar in link/chat window once and for all
	board - All/Higher/Lower Posts, New Post
	test clients with different local times, init random gmt offsets
	graphics - darker invite, news icon update, take border off pacman guy


spring release
	invitations
	auto-update
	web caching ips/files - look at using EC2
		run crawler once a day, upload highest uptime nodes to webcache site
	licensing, installer
	website
	*** items from todo
	31 crits
	live locations/chat
	network bandwidth limits - tracking in sim triggers node to start logging bw data
	store caching
	multisource downloading 
		interface - drop down component combo, shows treelist of d/l u/l, expand to show clients
		right click to cancel, increase/decrease priority
	


Interface
	General
		Sorting of listviews
		status panel needs to update as network connects network_statusupdate, trigger news as well
		test gmt visible in status panel
		unload tray icon on exit?
		alphabetizize component menus, project button, nav bar, project nav drop down
		dont allow nav bar person switch on mail/chat components
		leave join/project by clicking on project node, switching to project auto shows project node in bottom display
	
	connecting entertainment
		visual aid so people can watch the connection process, entertaining, embed in main panel?
		show ring with global in middle and ring with op name in middle
		show routing table nodes, and packets being sent
		route nodes dark green, search nodes blue, show self red/orage/green, rudp sockets purple
		visual, cool looking, shows user direct lack of centralization, most of functionality already implemented
		
	Internal 
		expand a little more (names associated with sessions/transfers/searches/publish)
		browsing using nav bar needs to trigger searches 
		create function to search through externals for type/id/project, when popping external look for existing window?

	Link
		Online - Show as currently online nodes structured into makeshift hierarchy
			chat/voice uses this hierarchy for high/low - done so that realtime communication is not fragmented when people go offline
		
	News
		crazy refreshes when news not visible and button clicked
		show connected / disconnected
		chat msg (if chat not visible or visited in last minute, or alerted in last minute)
			<project> Chat activityk, Betty: hey group....
		new people online 
		
		more refined, if care about user, do detailed diff between new and old file
			show self only if local didn't make the change, if non-local self change show as white
			detect diff between changed schedule / changed goals or both

	input interface
		move to html from rtf? smaller data format, everything plaintext by default, augmented by html where desired
		customizable style sheet for IM that user can edit
		embed pictures/videos, etc.. in email / posts / chat / IMs
		ability to right-click switch from normal to html view

	graphics
		storage - restore
		mail	- forward, reply
		board   - high, low, all
		plans   - edit
		goals	- edit
		tray	- restore, exit
		chat	- 
	
Components
	General
		Refactor Components with delegates or something, refactor while building visual component
			invokeInterface control->gui, gui->interface control functions handle locking of objects (NO locking from gui code)
		break control into interface comm / control comm so that multiple guis (mobile/mono/wpf) can be implemented easily
		Many actions in gui isnt piped down into control to fire events back to the interface to signal updates for multiple interface instances
		component plug-ins / view plugins for private components
		Remove references to LinkMap, use GetLink
		when component handles exit, assert that all events are emptied of references to debug gui's not releasing event handles
		Use LAN find code from gnuc to find peers on LAN, add to global then query for op
		
		Setting up and editing operation can also change the type/strength of the encryption used
		People can choose the strength/type of the encryption on their profile
		only load secret key on demand somehow, once used replace with zero's so not sitting static in memory
		
	Trust
		Higher determines lower's title/Name upon trust?
		Show that name/title so that can't be forged by someone changing their name and re-linking
		
		components
			links   - getlocs .. check cache functions
			chat    - high level chat is others in loop,
		New function to 'find in link map' so that mail,board,chat can provide the user with an option to 'find' a user
		Key termination command if private key compromised - auto-deletes all data associated with id

	Location 
		global replication
		make persistant so status panel can display last seen, also loaded can go straight to the cache
		permanent locations, no ttl except for global
		might be problem with different client ids
		can probably get rid of thread locks on location map
		send direct connects location updates immediately so they get things like away messages
		
		
		location info should probably contain latest versions for all components so 
			for example two of the same account would sync their storage without having to specifically having to open storage
			dynamic works for all components in list
	
	IM 
		Saved/Loaded my main IM interface
		Internal interface
		Log Interface - in chat log
		Crash on close IM, fin being called? unhooking from IMcontrol events? 
		sending file / picture - other side sees link click to accept, starts d/l with progress real time update to window
			result showed inline pic, or link to open file, file put in personal storage?
	Chat 
		show unfocused label as red on new messages
		only send full status on connect, otherwise send mini status updates for join/leaves
		figure out why invites don't work a lot, ensure that on connect invites are sent
		host going offline and coming back causes room members to not be synchronized
		double click member - IM, right click  - views, single click - send status, who
		room option - show locations, also for IM, make location font smaller
		check size of signed invite field
		link name change should change name in chat logs as well for chat/IM/window title
		implement live rooms / network
		set default cursor in input box
		test that our own link changes are reflected in link changes
		if room custom and no members, kill
		untrusted rooms discussed in chat.txt
		
		in future nodes marked as server can have rooms registered there so only one node to query for full room list
		log does chat/im - setup like yahoo chat log
		on join chat, node asks other nodes for previous singed messages before specified time
		
	Mail 
	    debug send/recv mail
		tagging messages, filter by tags
		double clicking on name loacates them in link tree in panel
		use labels for organization - for example a project label could be tagged on, so we could filter regarding project x
		delete mail not refreshing view
		soon - sync local mail between users
		test/do re-publishing mail
		*re-publish local outbound un-acked mail on network established
		give new mail a thread ID that is used for replies, so that tree control can be used to collapse messages

	Board 
		 board scope sub-levels down, auto search highers for posts that have source==target, and show if in scope
		 attaching files
		 detect if post success, if not (not connected) ensure re-post when network.established
		 posts with subs not marked with +
		 ***posts/replies not updating quickly or at all :(
			replies not propagating
		 *** use high/low check buttons, not a drop down
		 
	Profile
		time out loading - better searching interface use smoke color and better font, more info searching/dling/etc..
		Search / Transfer process painfully slow in real time mode, analyze
		Rename to Sites? Allow internal interlinked sub-pages

	Plans
		old plans not being deleted? seems like extra files in dir, try loading solo and updating local plan file
		shutdown in the middle of the causing load corruption?			
		transfer branch path when goal <-> schedule
		***probably want a custom renderer for the progress bar, default xp has it green
		***schedule slider should respond to mouse scrolls
		
	Storage
		drag into secure storage gives user option to replace what is already there, either on disk or locked
		
		review file references system
		drag files folder over highlights target
		secure copy / paste can use same folder commands as drag/drop
			copy/paste will be used as psuedo-fork to create local copy of groups build to work on in a seperate dir
			ensure really fast, because no 'real' files being created, all dupes in file system

		$ save storage snapshots (past header file versions) - display at root node	
		$ signal on comparison page if all files are replicated on network (can go offline and files still exist)

	Search Service
		local 
			Index - Component ID / Object ID / pub,priv / keywords
			Build index iteratively as program runs
			On exit encrypt save index file, if one exists index1,2,3, etc..
			On search gui - 1st time, load index files, when re-saved they are merged
				only load search indexes on demand, or slowly as app runs, dont lock app up
			Simple dictionay<key, list<object keys>> for each component
			Lookup(component, value) loads appropriate index if needed, returns object key
				object key mapped by component to object example key first 4 bytes of hash, object is full hash
		
			sqlite full text search - if previous too memory consuming or something
				get ado.net interface, db_linq, and full text search packages
				insert component ID / keywords / object ID for any new object coming in
				object removed trigger removal of anything in db with object ID
				search goes through all objects
				first version has no encryption, need $$ to pay for see license
		
		remote
			allow services to store key/byte[] on network
			example link component will publish userID at keys for Joe Smith on dht, so a search for Joe will find users named Joe
			keys expire over a certain amount of time, replicated until then
			
			link - publish name keys, userID, on result find location show if online
			storage - for large files pulish hash key, user ID - use for multi-source d/l
			
			global network could use this to find public operations key name, value OpID
			
Core
    old projects not cleared from components during savelocal, save / ditch / option?
    multisource downloading
    each component's minute action should have unique interrupt given by core class
     
	Rudp
		route data over session if desination the same	
		nat/block keep list of recent search ids/kadids so duplicate results arent sent out
		check natted are finding closest nodes to proxy off of
		use rudp when available to transmit link / loc data

		investigate LAN max transfer speed / CPU usuage and see what limits current setup imposes
		send packets directly from udp to rudp without switching to core thread
		rudpSession receive packet activate core thread		
		rudp socket send/recv buffer should use packet list instead of static buffers
		rudp session send/ecrypt buffers should be dynamically created for larger sizes

	Search 
		give components priority?? link over location, etc..
		make sure search result locations get to file download
		make sure store locations get to file download direct search -> store response works through firewalls
		both have the ability to be proxied

		record source kaddi with value
		on download try source, id isnt in location list, search for it, need that ID key to connect

		by the time key gets checked for download, profile / link headers should have right key if source is the same, if not gotta search

		search/download priority high (view) normal (network) low (research)
		forward searches to proxies
		if blocked send acks tcp to be forwarded
		analyze contact info sent in acks
		ensure correct contact info gets to transfer control, if blocked/natted/open ensure all work
		make sure download isnt started without sources

		search results need to transfer location info over to downloader
		what does search result from firewalled host look like?
		search results seem to only go out udp
		
		location info should include array of latest versions of each component
			so local area can update for everyone on login to the network
			storage, plans, profile - need latest fetched data of local area
			location data needs to be stored when user is offline for this to work

	store caching 
		keep track of when last result was sent
			if greater than a minute, cache entry is up for pruning
		
		if greater than x requests in time period, signal in search result to republish
			if search result tagged with republish, republish result at closest node that didnt have data
	
		used when high load
		how to keep cache entries up to date?
		cache entries only last for like 5 mins
		requester do theh caching, or should requested auto-cache if load too high
			auto-caching might not hit the nodes that requesting nodes would be likely to hit
		index file hashes on network for files over 10 meg, otherwise file can be multisourced from default replicators of file
		always get content once found from node closest to SELF, pull content away from source, ensure it doesn't get flooded
			node publishes data (he is focal point), diseminates to adjacent peers (focal point splits in two, etc..)
		How to prevent publishing overload? ex. 100 members in op all publishing global loc data at same 8 nodes closest to OpID
			need publish search type with acks that return current storage volume, publish closest not full

	udp packet throttle especially for patches
		backlog for packets, for patches, etc.. not for rudp
		packet cache for more than 4k sent in second
		cache should go for 60 seconds make, 240k, bleed cache out, first in first out
		Alert if packet cache has any entries at all
		check in sim if node sending more than x packets per sec
		
	ensure small nets / starting nets can be proxied through global net
		tcp proxies for non-local ops should be bandwidth throttled
		connect status should specify proxied through global
		5 connections in same op but all blocked able to form active op network by proxying throgh global
		
	privacy from untrusted
		mail grey if from untrusted source
		no posts allowed from untrusted
		IM settings allow host to not allow messages from untrusted
		refuse replication of network pieces to blacklisted, inherit blacklist from higher
			dont not replicate to untrusted because then each id needs to be trust verified continually
		heartbeat from top down with unique key, wont talk to 'unknown' nodes in dht without it
		if user is ignored, chat invites are ignored as well
		storage quotas per id to prevent flooding
		public key kill switch	
	
	contact manager? plaxo sync for permanent replicating store that is always accessible
		probably better if built on top of database component ;)
		
Simulator
	track bandwidth / memory / allocated objects
	figure out why IO writes in FiresoftDemo so high, getting 2min/sec through, pretty damn good
	record max udp burst sizes, or do packet size distribution histogram

	***checksigned / idtokey throw exceptions, maybe just return false or something?
	
	
live
	build test algorithms
	acts as continously active real-time conduit between all members in trusted system (might want to pipe system msgs through this)
	live based on rudp links, if no rudp link, live connect to next canidate, even if loc for someone exists
	rapidly alert up/down links when going offilne so that live structure can be patched quickly wihout nodes thinking location file is still active
	downlink determined by closest sub, if equal, highest rank where 2 nodes split tracks
	uplink determined by highest offline where not challenged
	show trusted/untrusted in live
	ensure when random subset of nodes removed all links/chat rooms still connected through live
	
			
quick
	test with null global, even have option for secret at this point?
	ensure callers know what to do when tcpcontrol.sendpacket is overloaded
	bandwidth chart
	use localfilekey for all file names so name diff per computer
	finish self search and then start bucket replication so startup doesnt spit out massive patches
	component dir also encoded with local key / trimmed to 8 chars
	cache files missing from component header - do in load header
			dont delete old path in Cache<component> function, until new header saved: move - save headers - delete old files
	run save headers every 10 secs - every sec is too often, and slows simmy
	

licensing
	deops looks for signed license file for proof
	passes license file to others on network as proof that local node is licensed
	license itself is signed data like name, address, phone, date, DOB, whatever, customer ID, type(com, gov, edu, org)
	if people using bad license they'll know it because their name isnt in it
	bad license can be copied, shared with warez whatever, the point is license accountability and proving bad licenses, creating incentive to get 'own' license	
	how to people protect their own licenses from being copied unwillfully?
		should contain passworded.. something to protect	
	
Release security
    throwing load exception in obfuscated code?
	Ensure unnessesary strings arent exposed
	Online tracking, embedd JMG internal key
	Obfuscate
	Sign
	detatch simulator
	Install app into GAC, strong name
	Pre-compile with ngen, http://msdn.microsoft.com/vcsharp/default.aspx?pull=/msdnmag/issues/06/05/CLRInsideOut/default.aspx
	send out random garbage and random times to random hosts, sometimes with char stings like 'hola como estas' just to mess
	    sniffers up a lil more 

